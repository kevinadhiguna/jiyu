# $group : Allow one to express operators (e.g.: arithmetic operator -> $sum, $avg, etc.) in an aggregation query

# $group must include '_id'. Otherwise, it will throw an error.

db.universities.aggregate([
  { $group: { _id: '$name', totaldocs: { $sum: 1 } } }
]);

# { _id: '$name' ... } above means value of _id is filled by value of name field. Take a look at the example below :
# -- DATA -- #
{
  country : 'Spain',
  city : 'Salamanca',
  name : 'USAL',   # <- what '$name' actually means
  location : {
    type : 'Point',
    coordinates : [ -5.6722512,17, 40.9607792 ]
  },
  students : [
    { year : 2014, number : 24774 },
    { year : 2015, number : 23166 },
    { year : 2016, number : 21913 },
    { year : 2017, number : 21715 }
  ]
},
{
  country : 'Spain',
  city : 'Salamanca',
  name : 'UPSA',   # <- what '$name' actually means
  location : {
    type : 'Point',
    coordinates : [ -5.6691191,17, 40.9631732 ]
  },
  students : [
    { year : 2014, number : 4788 },
    { year : 2015, number : 4821 },
    { year : 2016, number : 6550 },
    { year : 2017, number : 6125 }
  ]
}

# -- Output of aggregation query above -- #
{ "_id" : "UPSA", "totaldocs" : 1 }
{ "_id" : "USAL", "totaldocs" : 1 }
